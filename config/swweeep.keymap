#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/ext_power.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/outputs.h>

#define DEFAULT 0
#define NAV     1
#define SYM     2
#define FUNC    3
#define MEDIA   4
#define NUMLFT  5
#define NUMRHT  6

&caps_word { continue-list = <UNDERSCORE MINUS>; };
&lt {quick_tap_ms = 175;}

/ {
    combos {
        compatible = "zmk,combos";

        combo_undo {
            timeout-ms = <50>;
            key-positions = <20 21>;
            bindings = <&kp LC(Z)>;
        };
    };
};

/ {
    behaviors {
        hm: homerow_mods {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            tapping-term-ms = <300>;
            flavor = "balanced";
            bindings = <&kp>, <&kp>;
            quick-tap-ms = <175>;
            require-prior-idle-ms = <150>;
            hold-trigger-on-release;
        };

        hs: homerow_shift {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            tapping-term-ms = <200>;
            flavor = "balanced";
            bindings = <&kp>, <&kp>;
            quick-tap-ms = <175>;
            require-prior-idle-ms = <150>;
            hold-trigger-on-release;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
&kp Q           &kp W               &kp F       &kp P         &lt 6 B                &lt 5 J    &kp L         &kp U            &kp Y                &kp SEMI
&hm LEFT_ALT A  &hm LEFT_CONTROL R  &hm LGUI S  &hs LSHIFT T  &kp G                  &kp M      &hs RSHIFT N  &hm RIGHT_GUI E  &hm RIGHT_CONTROL I  &hm RIGHT_ALT O
&kp Z           &kp X               &kp C       &kp D         &kp V    &kp K  &kp H  &kp COMMA  &kp DOT       &kp FSLH         &kp ESCAPE           &lt NAV RET
&lt FUNC TAB                                                                                                                                        &lt 2 BSPC
&lt SYM SPACE                                                                                                                                       &lt 4 SQT
            >;

            label = "DEFAULT";
        };

        nav_layer {
            bindings = <
&kp ESC     &kp PG_UP   &kp UP     &kp PG_DN   &kp LS(LG(S))                     &kp ASTRK  &kp N7  &kp N8  &kp N9  &kp MINUS
&kp HOME    &kp LEFT    &kp DOWN   &kp RIGHT   &kp END                           &kp FSLH   &kp N4  &kp N5  &kp N6  &kp PLUS
&caps_word  &bt BT_PRV  &kp RC(C)  &bt BT_NXT  &kp RC(V)      &kp EQUAL  &kp N1  &kp N2     &kp N3  &kp N0  &trans  &trans
&kp TAB                                                                                                             &kp DELETE
&kp SPACE                                                                                                           &kp DOT
            >;

            label = "NAV";
        };

        sym_layer {
            bindings = <
&kp EXCL    &kp AT     &kp HASH         &kp DLLR          &kp PRCNT                             &kp CARET    &kp AMPS  &kp ASTRK  &kp UNDER  &kp EQUAL
&kp MINUS   &kp LBKT   &kp LBRC         &kp LPAR          &kp LT                                &kp GT       &kp RPAR  &kp RBRC   &kp RBKT   &kp PLUS
&caps_word  &kp GRAVE  &kp LC(LS(TAB))  &kp LC(LG(LEFT))  &kp CAPS   &trans  &kp LC(LG(RIGHT))  &kp LC(TAB)  &kp PIPE  &kp BSLH   &trans     &kp RET
&kp DEL                                                                                                                                      &kp BSPC
&trans                                                                                                                                       &trans
            >;

            label = "SYMBOL";
        };

        func_layer {
            bindings = <
&bootloader     &kp LS(PG_UP)       &kp LS(UP)    &kp LS(PG_DN)        &kp LS(LG(NUMBER_4))                             &kp C_MUTE       &kp F7  &kp F8   &kp F9  &kp F12
&kp LS(HOME)    &kp LS(LEFT)        &kp LS(DOWN)  &kp LS(RIGHT)        &kp LS(END)                                      &kp C_VOLUME_UP  &kp F4  &kp F5   &kp F6  &kp F11
&caps_word      &kp RC(LEFT_ARROW)  &kp RG(C)     &kp RC(RIGHT_ARROW)  &kp RG(V)             &kp C_VOLUME_DOWN  &kp F1  &kp F2           &kp F3  &kp F10  &trans  &out OUT_TOG
&trans                                                                                                                                                            &kp C_PLAY_PAUSE
&kp C_PREVIOUS                                                                                                                                                    &kp C_NEXT
            >;

            label = "FUNC";
        };

        setting_layer {
            bindings = <
&trans        &trans  &trans  &trans  &trans                                       &studio_unlock     &bt BT_PRV    &bt BT_NXT    &trans        &bootloader
&trans        &trans  &trans  &trans  &trans                                       &bt BT_CLR         &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3
&trans        &trans  &trans  &trans  &trans  &ext_power EP_TOG  &ext_power EP_ON  &ext_power EP_OFF  &out OUT_USB  &out OUT_BLE  &trans        &trans
&kp DEL                                                                                                                                         &trans
&out OUT_BLE                                                                                                                                    &out OUT_USB
            >;

            label = "SET";
        };

        numlft_layer {
            bindings = <
&kp N7  &kp N8  &kp N9  &kp MINUS  &trans                  &trans  &trans  &trans  &trans  &trans
&kp N4  &kp N5  &kp N6  &kp PLUS   &trans                  &trans  &trans  &trans  &trans  &trans
&kp N1  &kp N2  &kp N3  &kp N0     &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans
&trans                                                                                     &trans
&trans                                                                                     &trans
            >;

            label = "L_NUM";
        };

        numrht_layer {
            bindings = <
&trans  &trans  &trans  &trans  &trans                  &trans  &kp N7  &kp N8  &kp N9  &kp MINUS
&trans  &trans  &trans  &trans  &trans                  &trans  &kp N4  &kp N5  &kp N6  &kp PLUS
&trans  &trans  &trans  &trans  &trans  &trans  &kp N1  &kp N2  &kp N3  &kp N0  &trans  &trans
&trans                                                                                  &trans
&trans                                                                                  &trans
            >;

            label = "R_NUM";
        };
    };
};
